{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robotArray","robots","map","robot","SearchBox","search","onChange","type","placeholder","value","Scroll","props","style","overflowY","height","border","children","App","onSearchChange","e","setState","target","state","fetch","then","res","json","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEaA,EAAO,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC5B,OACI,sBAAKC,UAAY,sCAAjB,UACI,qBAAKC,IAAG,+BAA4BJ,EAA5B,qBAAmDK,IAAM,UACjE,sBAAKF,UAAY,YAAjB,UACI,6BAAKF,IACL,4BAAIC,WCMLI,EAXE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACWC,KAAI,SAAAC,GAC3B,OAAO,cAAC,EAAD,CAAuBV,GAAMU,EAAMV,GAAIC,KAAQS,EAAMT,KAAMC,MAASQ,EAAMR,OAA7DQ,EAAMV,OAE7B,OACI,8BACIO,KCOGI,EAdU,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAC/B,OACI,qBAAKV,UAAY,MAAjB,SACI,uBACAA,UAAY,mCACZW,KAAO,SACPC,YAAc,gBACdF,SAAYA,EACZG,MAASJ,OCANK,EARO,SAACC,GACnB,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,QAASC,OAAQ,mBAA7D,SACKJ,EAAMK,YC0CJC,G,8DAtCb,aAAc,IAAD,8BACX,gBAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZf,OAAQc,EAAEE,OAAOZ,SARnB,EAAKa,MAAQ,CACXrB,OAAQ,GACRI,OAAQ,IAJC,E,qDAcb,WAAoB,IAAD,OACjBkB,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAvB,GAAM,OAAI,EAAKmB,SAAS,CAACnB,gB,oBAGnC,WAAS,IAAD,OACA0B,EAAiBC,KAAKN,MAAMrB,OAAO4B,QAAO,SAAA1B,GAAK,OAAIA,EAAMT,KAAKoC,cAAcC,SAAS,EAAKT,MAAMjB,OAAOyB,kBAC7G,OAAgC,IAA7BF,KAAKN,MAAMrB,OAAO+B,OACZ,oBAAIpC,UAAY,UAAhB,uBAGL,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAY,KAAhB,0BACA,cAAC,EAAD,CAAWU,SAAYsB,KAAKV,eAAgBb,OAAUuB,KAAKN,MAAMjB,SACjE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUJ,OAAU0B,a,GAhCdM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d03399c7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Card = ({id, name, email}) => {\r\n    return (\r\n        <div className = 'bg-light-green dib br3 pa3 ma2 grow'>\r\n            <img src = {`https://robohash.org/${id}.png?size=200x200`} alt = \"Robot\"/>\r\n            <div className = 'card-body'>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    const robotArray = robots.map(robot => {\r\n       return <Card key = {robot.id} id = {robot.id} name = {robot.name} email = {robot.email}/>\r\n    })\r\n    return (\r\n        <div>\r\n           {robotArray} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nexport const SearchBox = ({search, onChange}) => {\r\n    return (\r\n        <div className = \"pa2\">\r\n            <input \r\n            className = \"pa3 ba b--green bg-lightest-blue\"\r\n            type = 'search'\r\n            placeholder = \"Search Robots\" \r\n            onChange = {onChange}\r\n            value = {search}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nexport const Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', height: '500px', border: '5px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import CardList from './CardList'\nimport SearchBox from './SearchBox'\nimport Scroll from './Scroll'\nimport './App.css';\nimport 'tachyons'\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      search: ''\n    }\n  }\n\n  onSearchChange = (e) => {\n    this.setState({\n      search: e.target.value,\n    })\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(robots => this.setState({robots}))\n  }\n\n  render(){\n    const filteredRobots = this.state.robots.filter(robot => robot.name.toLowerCase().includes(this.state.search.toLowerCase()))\n    if(this.state.robots.length === 0){\n      return <h1 className = \"loading\">Loading!!</h1>\n    } else{\n      return (\n        <div className=\"App tc\">\n          <h1 className = 'f1'>Robo Friends</h1>\n          <SearchBox onChange = {this.onSearchChange} search = {this.state.search}/>\n          <Scroll>\n            <CardList robots = {filteredRobots}/>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}